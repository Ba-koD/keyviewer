name: Build and Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Read version
      id: version
      run: |
        $version = Get-Content "version.txt" -Raw | ForEach-Object { $_.Trim() }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        Write-Host "Version: $version"
        
    - name: Build main program (cx_Freeze onedir)
      run: |
        python setup_main.py build
        
    - name: Build installer (PyInstaller onefile)
      run: |
        $installerName = "KBQV-Installer-${{ steps.version.outputs.version }}"
        python -m PyInstaller --clean --onefile --noconsole --name $installerName --icon "web/favicon.ico" installer.py
        
    - name: Build portable version (PyInstaller onefile)
      run: |
        $portableName = "KBQV-Portable-${{ steps.version.outputs.version }}"
        python -m PyInstaller --clean --onefile --noconsole --name $portableName --icon "web/favicon.ico" --add-data "web;web" app/launcher.py
        
    - name: Create onedir zip package
      run: |
        cd dist
        $zip_name = "KBQV-v${{ steps.version.outputs.version }}.zip"
        $source_folder = "KBQV-v${{ steps.version.outputs.version }}"
        
        # ÏÜåÏä§ Ìè¥Îçî ÌôïÏù∏
        if (-not (Test-Path $source_folder)) {
            Write-Host "ERROR: Source folder not found: $source_folder"
            exit 1
        }
        
        # Ìè¥Îçî ÎÇ¥Ïö© ÌôïÏù∏
        $files = Get-ChildItem $source_folder -Recurse | Where-Object { -not $_.PSIsContainer }
        if ($files.Count -eq 0) {
            Write-Host "ERROR: Source folder is empty: $source_folder"
            exit 1
        }
        
        Write-Host "Found $($files.Count) files in source folder"
        Compress-Archive -Path "$source_folder\*" -DestinationPath $zip_name
        Write-Host "Created: $zip_name"
        
    - name: List build artifacts
      run: |
        Write-Host "Build artifacts:" -ForegroundColor Green
        Get-ChildItem -Path "dist" -Recurse | ForEach-Object {
          if ($_.PSIsContainer) {
            Write-Host "  [FOLDER] $($_.Name)" -ForegroundColor White
          } else {
            Write-Host "  [FILE] $($_.Name)" -ForegroundColor White
          }
        }
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/
        
  release:
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: ./dist
        
    - name: Show version from build
      run: |
        echo "Release version: ${{ needs.build.outputs.version }}"
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.build.outputs.version }}
        name: Release v${{ needs.build.outputs.version }}
        body: |
          ## KeyQueueViewer v${{ needs.build.outputs.version }}
          
          ### üìù Latest Changes
          **Commit Message**: ${{ github.event.head_commit.message }}
          **Commit**: ${{ github.sha }}
          **Branch**: ${{ github.ref_name }}
          **Workflow**: ${{ github.workflow }}
          
          ### üì¶ Downloads
          - **üîß Installer**: `KBQV-Installer-${{ needs.build.outputs.version }}.exe` - Auto-installer for easy deployment
          - **üíª Portable**: `KBQV-Portable-${{ needs.build.outputs.version }}.exe` - Portable version (may trigger Windows Defender)
          - **üìÅ Main Program**: `KBQV-v${{ needs.build.outputs.version }}.zip` - Extract and run (recommended)
          
          ### üöÄ Installation
          1. **Recommended**: Download and extract `KBQV-v${{ needs.build.outputs.version }}.zip`
          2. **Easy Install**: Run `KBQV-Installer-${{ needs.build.outputs.version }}.exe` (requires internet)
          3. **Portable**: Run `KBQV-Portable-${{ needs.build.outputs.version }}.exe` directly
          
          ### üìã Notes
          - Installer automatically downloads the latest version from GitHub
          - Main program built with cx_Freeze to reduce Windows Defender false positives
          - Portable version built with PyInstaller (may trigger security software)
          
          ### üîó Links
          - **Repository**: https://github.com/${{ github.repository }}
          - **Releases**: https://github.com/${{ github.repository }}/releases
        files: |
          ./dist/KBQV-Installer-*.exe
          ./dist/KBQV-Portable-*.exe
          ./dist/KBQV-v*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
